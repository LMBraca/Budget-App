{
  "version": 3,
  "sources": ["../../chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js"],
  "sourcesContent": ["/*!\r\n * chartjs-adapter-date-fns v3.0.0\r\n * https://www.chartjs.org\r\n * (c) 2022 chartjs-adapter-date-fns Contributors\r\n * Released under the MIT license\r\n */\r\nimport { _adapters } from 'chart.js';\r\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\r\n\r\nconst FORMATS = {\r\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\r\n  millisecond: 'h:mm:ss.SSS aaaa',\r\n  second: 'h:mm:ss aaaa',\r\n  minute: 'h:mm aaaa',\r\n  hour: 'ha',\r\n  day: 'MMM d',\r\n  week: 'PP',\r\n  month: 'MMM yyyy',\r\n  quarter: 'qqq - yyyy',\r\n  year: 'yyyy'\r\n};\r\n\r\n_adapters._date.override({\r\n  _id: 'date-fns', // DEBUG\r\n\r\n  formats: function() {\r\n    return FORMATS;\r\n  },\r\n\r\n  parse: function(value, fmt) {\r\n    if (value === null || typeof value === 'undefined') {\r\n      return null;\r\n    }\r\n    const type = typeof value;\r\n    if (type === 'number' || value instanceof Date) {\r\n      value = toDate(value);\r\n    } else if (type === 'string') {\r\n      if (typeof fmt === 'string') {\r\n        value = parse(value, fmt, new Date(), this.options);\r\n      } else {\r\n        value = parseISO(value, this.options);\r\n      }\r\n    }\r\n    return isValid(value) ? value.getTime() : null;\r\n  },\r\n\r\n  format: function(time, fmt) {\r\n    return format(time, fmt, this.options);\r\n  },\r\n\r\n  add: function(time, amount, unit) {\r\n    switch (unit) {\r\n    case 'millisecond': return addMilliseconds(time, amount);\r\n    case 'second': return addSeconds(time, amount);\r\n    case 'minute': return addMinutes(time, amount);\r\n    case 'hour': return addHours(time, amount);\r\n    case 'day': return addDays(time, amount);\r\n    case 'week': return addWeeks(time, amount);\r\n    case 'month': return addMonths(time, amount);\r\n    case 'quarter': return addQuarters(time, amount);\r\n    case 'year': return addYears(time, amount);\r\n    default: return time;\r\n    }\r\n  },\r\n\r\n  diff: function(max, min, unit) {\r\n    switch (unit) {\r\n    case 'millisecond': return differenceInMilliseconds(max, min);\r\n    case 'second': return differenceInSeconds(max, min);\r\n    case 'minute': return differenceInMinutes(max, min);\r\n    case 'hour': return differenceInHours(max, min);\r\n    case 'day': return differenceInDays(max, min);\r\n    case 'week': return differenceInWeeks(max, min);\r\n    case 'month': return differenceInMonths(max, min);\r\n    case 'quarter': return differenceInQuarters(max, min);\r\n    case 'year': return differenceInYears(max, min);\r\n    default: return 0;\r\n    }\r\n  },\r\n\r\n  startOf: function(time, unit, weekday) {\r\n    switch (unit) {\r\n    case 'second': return startOfSecond(time);\r\n    case 'minute': return startOfMinute(time);\r\n    case 'hour': return startOfHour(time);\r\n    case 'day': return startOfDay(time);\r\n    case 'week': return startOfWeek(time);\r\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\r\n    case 'month': return startOfMonth(time);\r\n    case 'quarter': return startOfQuarter(time);\r\n    case 'year': return startOfYear(time);\r\n    default: return time;\r\n    }\r\n  },\r\n\r\n  endOf: function(time, unit) {\r\n    switch (unit) {\r\n    case 'second': return endOfSecond(time);\r\n    case 'minute': return endOfMinute(time);\r\n    case 'hour': return endOfHour(time);\r\n    case 'day': return endOfDay(time);\r\n    case 'week': return endOfWeek(time);\r\n    case 'month': return endOfMonth(time);\r\n    case 'quarter': return endOfQuarter(time);\r\n    case 'year': return endOfYear(time);\r\n    default: return time;\r\n    }\r\n  }\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
